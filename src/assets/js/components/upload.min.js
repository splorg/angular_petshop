/*! UIkit 3.14.1 | https://www.getuikit.com | (c) 2014 - 2022 YOOtheme | MIT License */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("uikit-util")):"function"==typeof define&&define.amd?define("uikitupload",["uikit-util"],t):(e="undefined"!=typeof globalThis?globalThis:e||self).UIkitUpload=t(e.UIkit.util)}(this,(function(e){"use strict";var t={props:{allow:String,clsDragover:String,concurrent:Number,maxSize:Number,method:String,mime:String,msgInvalidMime:String,msgInvalidName:String,msgInvalidSize:String,multiple:Boolean,name:String,params:Object,type:String,url:String},data:{allow:!1,clsDragover:"uk-dragover",concurrent:1,maxSize:0,method:"POST",mime:!1,msgInvalidMime:"Invalid File Type: %s",msgInvalidName:"Invalid File Name: %s",msgInvalidSize:"Invalid File Size: %s Kilobytes Max",multiple:!1,name:"files[]",params:{},type:"",url:"",abort:e.noop,beforeAll:e.noop,beforeSend:e.noop,complete:e.noop,completeAll:e.noop,error:e.noop,fail:e.noop,load:e.noop,loadEnd:e.noop,loadStart:e.noop,progress:e.noop},events:{change(t){e.matches(t.target,'input[type="file"]')&&(t.preventDefault(),t.target.files&&this.upload(t.target.files),t.target.value="")},drop(t){o(t);const i=t.dataTransfer;null!=i&&i.files&&(e.removeClass(this.$el,this.clsDragover),this.upload(i.files))},dragenter(e){o(e)},dragover(t){o(t),e.addClass(this.$el,this.clsDragover)},dragleave(t){o(t),e.removeClass(this.$el,this.clsDragover)}},methods:{async upload(t){if(!(t=e.toArray(t)).length)return;e.trigger(this.$el,"upload",[t]);for(const e of t){if(this.maxSize&&1e3*this.maxSize<e.size)return void this.fail(this.msgInvalidSize.replace("%s",this.maxSize));if(this.allow&&!i(this.allow,e.name))return void this.fail(this.msgInvalidName.replace("%s",this.allow));if(this.mime&&!i(this.mime,e.type))return void this.fail(this.msgInvalidMime.replace("%s",this.mime))}this.multiple||(t=t.slice(0,1)),this.beforeAll(this,t);const o=function(e,t){const i=[];for(let o=0;o<e.length;o+=t)i.push(e.slice(o,o+t));return i}(t,this.concurrent),a=async t=>{const i=new FormData;t.forEach((e=>i.append(this.name,e)));for(const e in this.params)i.append(e,this.params[e]);try{const t=await e.ajax(this.url,{data:i,method:this.method,responseType:this.type,beforeSend:t=>{const{xhr:i}=t;i.upload&&e.on(i.upload,"progress",this.progress);for(const t of["loadStart","load","loadEnd","abort"])e.on(i,t.toLowerCase(),this[t]);return this.beforeSend(t)}});this.complete(t),o.length?await a(o.shift()):this.completeAll(t)}catch(e){this.error(e)}};await a(o.shift())}}};function i(e,t){return t.match(new RegExp("^"+e.replace(/\//g,"\\/").replace(/\*\*/g,"(\\/[^\\/]+)*").replace(/\*/g,"[^\\/]+").replace(/((?!\\))\?/g,"$1.")+"$","i"))}function o(e){e.preventDefault(),e.stopPropagation()}return"undefined"!=typeof window&&window.UIkit&&window.UIkit.component("upload",t),t}));
